<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.victxl.curso.CursoApplicationTests" time="12.201" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="22"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso\target\test-classes;C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso\target\classes;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.5\spring-boot-starter-web-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\Victor\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Victor\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Victor\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Victor\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Victor\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Victor\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Victor\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.5\spring-boot-starter-tomcat-3.2.5.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.20\tomcat-embed-core-10.1.20.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.20\tomcat-embed-websocket-10.1.20.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\Victor\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\Victor\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-webmvc\6.1.6\spring-webmvc-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\Victor\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Victor\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Victor\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Victor\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Victor\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Victor\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Victor\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Victor\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Victor\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\Victor\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Victor\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Victor\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Victor\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Victor\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Victor\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Victor\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\Victor\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Victor\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Victor\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Victor\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\Victor\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.5\spring-boot-starter-data-jpa-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.5\spring-boot-starter-aop-3.2.5.jar;C:\Users\Victor\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.5\spring-boot-starter-jdbc-3.2.5.jar;C:\Users\Victor\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-jdbc\6.1.6\spring-jdbc-6.1.6.jar;C:\Users\Victor\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Victor\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Victor\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Victor\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Victor\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Victor\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Victor\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Victor\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Victor\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Victor\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Victor\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Victor\.m2\repository\org\springframework\data\spring-data-jpa\3.2.5\spring-data-jpa-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\data\spring-data-commons\3.2.5\spring-data-commons-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-orm\6.1.6\spring-orm-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-tx\6.1.6\spring-tx-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-aspects\6.1.6\spring-aspects-6.1.6.jar;C:\Users\Victor\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="22"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-22\bin"/>
    <property name="sun.java.command" value="C:\Users\Victor\AppData\Local\Temp\surefire15247269155141047304\surefirebooter-20240502225806690_3.jar C:\Users\Victor\AppData\Local\Temp\surefire15247269155141047304 2024-05-02T22-58-06_534-jvmRun1 surefire-20240502225806690_1tmp surefire_0-20240502225806690_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso\target\test-classes;C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso\target\classes;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.5\spring-boot-starter-web-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\Victor\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Victor\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Victor\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Victor\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Victor\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Victor\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Victor\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Victor\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.5\spring-boot-starter-tomcat-3.2.5.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.20\tomcat-embed-core-10.1.20.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\Victor\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.20\tomcat-embed-websocket-10.1.20.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\Victor\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\Victor\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-webmvc\6.1.6\spring-webmvc-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\Victor\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Victor\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Victor\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Victor\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Victor\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Victor\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Victor\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Victor\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Victor\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\Victor\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Victor\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Victor\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Victor\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Victor\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Victor\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Victor\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Victor\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\Victor\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Victor\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Victor\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Victor\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\Victor\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.5\spring-boot-starter-data-jpa-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.5\spring-boot-starter-aop-3.2.5.jar;C:\Users\Victor\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\Victor\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.5\spring-boot-starter-jdbc-3.2.5.jar;C:\Users\Victor\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-jdbc\6.1.6\spring-jdbc-6.1.6.jar;C:\Users\Victor\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Victor\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Victor\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Victor\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Victor\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Victor\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Victor\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Victor\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Victor\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Victor\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Victor\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Victor\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Victor\.m2\repository\org\springframework\data\spring-data-jpa\3.2.5\spring-data-jpa-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\data\spring-data-commons\3.2.5\spring-data-commons-3.2.5.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-orm\6.1.6\spring-orm-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-tx\6.1.6\spring-tx-6.1.6.jar;C:\Users\Victor\.m2\repository\org\springframework\spring-aspects\6.1.6\spring-aspects-6.1.6.jar;C:\Users\Victor\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Victor"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-04-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-22"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Victor\AppData\Local\Temp\surefire15247269155141047304\surefirebooter-20240502225806690_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="22.0.1+8-16"/>
    <property name="user.name" value="Victor"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Victor\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Victor\AppData\Local\Temp\"/>
    <property name="idea.version" value="2024.1"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="22.0.1"/>
    <property name="user.dir" value="C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="8456"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-22\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Users\Victor\AppData\Local\Microsoft\WindowsApps;C:\Users\Victor\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Victor\AppData\Local\GitHubDesktop\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="22.0.1+8-16"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="66.0"/>
  </properties>
  <testcase name="contextLoads" classname="com.victxl.curso.CursoApplicationTests" time="0.806">
    <system-out><![CDATA[22:58:07.958 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.victxl.curso.CursoApplicationTests]: CursoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
22:58:08.116 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.victxl.curso.CursoApplication for test class com.victxl.curso.CursoApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-05-02T22:58:09.181-03:00  INFO 8456 --- [           main] com.victxl.curso.CursoApplicationTests   : Starting CursoApplicationTests using Java 22.0.1 with PID 8456 (started by Victor in C:\Users\Victor\Documents\Java\Curso de Java\Udemy\ProjetosSpring\curso)
2024-05-02T22:58:09.182-03:00  INFO 8456 --- [           main] com.victxl.curso.CursoApplicationTests   : The following 1 profile is active: "test"
2024-05-02T22:58:10.343-03:00  INFO 8456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-02T22:58:10.447-03:00  INFO 8456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 89 ms. Found 5 JPA repository interfaces.
2024-05-02T22:58:11.228-03:00  INFO 8456 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-05-02T22:58:11.582-03:00  INFO 8456 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-05-02T22:58:11.584-03:00  INFO 8456 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-05-02T22:58:11.660-03:00  INFO 8456 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-02T22:58:11.849-03:00  INFO 8456 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-05-02T22:58:11.931-03:00  INFO 8456 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-02T22:58:12.417-03:00  INFO 8456 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-02T22:58:12.500-03:00  WARN 8456 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-02T22:58:15.105-03:00  INFO 8456 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists categoria cascade 
Hibernate: 
    drop table if exists item_pedido cascade 
Hibernate: 
    drop table if exists pagamento cascade 
Hibernate: 
    drop table if exists pedido cascade 
Hibernate: 
    drop table if exists produto cascade 
Hibernate: 
    drop table if exists produto_categoria cascade 
Hibernate: 
    drop table if exists usuario cascade 
Hibernate: 
    create table categoria (
        id bigint generated by default as identity,
        nome varchar(255),
        primary key (id)
    )
Hibernate: 
    create table item_pedido (
        preco float(53) not null,
        quantidade integer not null,
        id_pedido bigint not null,
        id_produto bigint not null,
        primary key (id_pedido, id_produto)
    )
Hibernate: 
    create table pagamento (
        momento timestamp(6) with time zone,
        pedido_id bigint not null,
        primary key (pedido_id)
    )
Hibernate: 
    create table pedido (
        status_pedido integer,
        id bigint generated by default as identity,
        id_cliente bigint,
        momento timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table produto (
        preco float(53),
        id bigint generated by default as identity,
        descricao varchar(255),
        imagem varchar(255),
        nome varchar(255),
        primary key (id)
    )
Hibernate: 
    create table produto_categoria (
        id_categoria bigint not null,
        id_produto bigint not null,
        primary key (id_categoria, id_produto)
    )
Hibernate: 
    create table usuario (
        id bigint generated by default as identity,
        email varchar(255),
        nome varchar(255),
        senha varchar(255),
        telefone varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists item_pedido 
       add constraint FKki3qccy81pmw8g85eo5q34rc6 
       foreign key (id_produto) 
       references pedido
Hibernate: 
    alter table if exists item_pedido 
       add constraint FK2jgw8tddykqwohd56eme1v56j 
       foreign key (id_pedido) 
       references produto
Hibernate: 
    alter table if exists pagamento 
       add constraint FKthad9tkw4188hb3qo1lm5ueb0 
       foreign key (pedido_id) 
       references pedido
Hibernate: 
    alter table if exists pedido 
       add constraint FK48929k2o7euot8lws254925op 
       foreign key (id_cliente) 
       references usuario
Hibernate: 
    alter table if exists produto_categoria 
       add constraint FK7w4lfcoga9id6t8qnksuntr8x 
       foreign key (id_categoria) 
       references categoria
Hibernate: 
    alter table if exists produto_categoria 
       add constraint FKemku9l38evdgoufg806728kcf 
       foreign key (id_produto) 
       references produto
2024-05-02T22:58:15.227-03:00  INFO 8456 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-02T22:58:18.248-03:00  INFO 8456 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-05-02T22:58:18.348-03:00  INFO 8456 --- [           main] com.victxl.curso.CursoApplicationTests   : Started CursoApplicationTests in 9.724 seconds (process running for 11.426)
Hibernate: 
    insert 
    into
        categoria
        (nome, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        categoria
        (nome, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        categoria
        (nome, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        usuario
        (email, nome, senha, telefone, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        usuario
        (email, nome, senha, telefone, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        usuario
        (email, nome, senha, telefone, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        pedido
        (id_cliente, momento, status_pedido, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        pedido
        (id_cliente, momento, status_pedido, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        pedido
        (id_cliente, momento, status_pedido, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        produto
        (descricao, imagem, nome, preco, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        produto
        (descricao, imagem, nome, preco, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        produto
        (descricao, imagem, nome, preco, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        produto
        (descricao, imagem, nome, preco, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        produto
        (descricao, imagem, nome, preco, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    select
        p1_0.id,
        p1_0.descricao,
        p1_0.imagem,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.id_produto,
        c1_1.id,
        c1_1.nome 
    from
        produto_categoria c1_0 
    join
        categoria c1_1 
            on c1_1.id=c1_0.id_categoria 
    where
        c1_0.id_produto=?
Hibernate: 
    select
        c1_0.id,
        c1_0.nome 
    from
        categoria c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.descricao,
        p1_0.imagem,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.id_produto,
        c1_1.id,
        c1_1.nome 
    from
        produto_categoria c1_0 
    join
        categoria c1_1 
            on c1_1.id=c1_0.id_categoria 
    where
        c1_0.id_produto=?
Hibernate: 
    select
        c1_0.id,
        c1_0.nome 
    from
        categoria c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.descricao,
        p1_0.imagem,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.id_produto,
        c1_1.id,
        c1_1.nome 
    from
        produto_categoria c1_0 
    join
        categoria c1_1 
            on c1_1.id=c1_0.id_categoria 
    where
        c1_0.id_produto=?
Hibernate: 
    select
        c1_0.id,
        c1_0.nome 
    from
        categoria c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.descricao,
        p1_0.imagem,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.id_produto,
        c1_1.id,
        c1_1.nome 
    from
        produto_categoria c1_0 
    join
        categoria c1_1 
            on c1_1.id=c1_0.id_categoria 
    where
        c1_0.id_produto=?
Hibernate: 
    select
        p1_0.id,
        p1_0.descricao,
        p1_0.imagem,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.id_produto,
        c1_1.id,
        c1_1.nome 
    from
        produto_categoria c1_0 
    join
        categoria c1_1 
            on c1_1.id=c1_0.id_categoria 
    where
        c1_0.id_produto=?
Hibernate: 
    insert 
    into
        produto_categoria
        (id_produto, id_categoria) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        produto_categoria
        (id_produto, id_categoria) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        produto_categoria
        (id_produto, id_categoria) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        produto_categoria
        (id_produto, id_categoria) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        produto_categoria
        (id_produto, id_categoria) 
    values
        (?, ?)
Hibernate: 
    select
        ip1_0.id_produto,
        p1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.nome,
        c1_0.senha,
        c1_0.telefone,
        p1_0.momento,
        p2_0.pedido_id,
        p2_0.momento,
        p1_0.status_pedido,
        ip1_0.id_pedido,
        p4_0.id,
        p4_0.descricao,
        p4_0.imagem,
        p4_0.nome,
        p4_0.preco,
        ip1_0.preco,
        ip1_0.quantidade 
    from
        item_pedido ip1_0 
    left join
        pedido p1_0 
            on p1_0.id=ip1_0.id_produto 
    left join
        usuario c1_0 
            on c1_0.id=p1_0.id_cliente 
    left join
        pagamento p2_0 
            on p1_0.id=p2_0.pedido_id 
    left join
        produto p4_0 
            on p4_0.id=ip1_0.id_pedido 
    where
        (
            ip1_0.id_produto, ip1_0.id_pedido
        ) in ((?, ?))
Hibernate: 
    select
        ip1_0.id_produto,
        p1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.nome,
        c1_0.senha,
        c1_0.telefone,
        p1_0.momento,
        p2_0.pedido_id,
        p2_0.momento,
        p1_0.status_pedido,
        ip1_0.id_pedido,
        p4_0.id,
        p4_0.descricao,
        p4_0.imagem,
        p4_0.nome,
        p4_0.preco,
        ip1_0.preco,
        ip1_0.quantidade 
    from
        item_pedido ip1_0 
    left join
        pedido p1_0 
            on p1_0.id=ip1_0.id_produto 
    left join
        usuario c1_0 
            on c1_0.id=p1_0.id_cliente 
    left join
        pagamento p2_0 
            on p1_0.id=p2_0.pedido_id 
    left join
        produto p4_0 
            on p4_0.id=ip1_0.id_pedido 
    where
        (
            ip1_0.id_produto, ip1_0.id_pedido
        ) in ((?, ?))
Hibernate: 
    select
        ip1_0.id_produto,
        p1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.nome,
        c1_0.senha,
        c1_0.telefone,
        p1_0.momento,
        p2_0.pedido_id,
        p2_0.momento,
        p1_0.status_pedido,
        ip1_0.id_pedido,
        p4_0.id,
        p4_0.descricao,
        p4_0.imagem,
        p4_0.nome,
        p4_0.preco,
        ip1_0.preco,
        ip1_0.quantidade 
    from
        item_pedido ip1_0 
    left join
        pedido p1_0 
            on p1_0.id=ip1_0.id_produto 
    left join
        usuario c1_0 
            on c1_0.id=p1_0.id_cliente 
    left join
        pagamento p2_0 
            on p1_0.id=p2_0.pedido_id 
    left join
        produto p4_0 
            on p4_0.id=ip1_0.id_pedido 
    where
        (
            ip1_0.id_produto, ip1_0.id_pedido
        ) in ((?, ?))
Hibernate: 
    select
        ip1_0.id_produto,
        p1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.nome,
        c1_0.senha,
        c1_0.telefone,
        p1_0.momento,
        p2_0.pedido_id,
        p2_0.momento,
        p1_0.status_pedido,
        ip1_0.id_pedido,
        p4_0.id,
        p4_0.descricao,
        p4_0.imagem,
        p4_0.nome,
        p4_0.preco,
        ip1_0.preco,
        ip1_0.quantidade 
    from
        item_pedido ip1_0 
    left join
        pedido p1_0 
            on p1_0.id=ip1_0.id_produto 
    left join
        usuario c1_0 
            on c1_0.id=p1_0.id_cliente 
    left join
        pagamento p2_0 
            on p1_0.id=p2_0.pedido_id 
    left join
        produto p4_0 
            on p4_0.id=ip1_0.id_pedido 
    where
        (
            ip1_0.id_produto, ip1_0.id_pedido
        ) in ((?, ?))
Hibernate: 
    insert 
    into
        item_pedido
        (preco, quantidade, id_produto, id_pedido) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        item_pedido
        (preco, quantidade, id_produto, id_pedido) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        item_pedido
        (preco, quantidade, id_produto, id_pedido) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        item_pedido
        (preco, quantidade, id_produto, id_pedido) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        p1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.nome,
        c1_0.senha,
        c1_0.telefone,
        p1_0.momento,
        p2_0.pedido_id,
        p2_0.momento,
        p1_0.status_pedido 
    from
        pedido p1_0 
    left join
        usuario c1_0 
            on c1_0.id=p1_0.id_cliente 
    left join
        pagamento p2_0 
            on p1_0.id=p2_0.pedido_id 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        pagamento
        (momento, pedido_id) 
    values
        (?, ?)
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\Victor\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>